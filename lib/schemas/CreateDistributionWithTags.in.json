{
    "type": "object",
    "properties": {
        "WithTags": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "The request to create a new distribution with tags. ",
            "properties": {
                "DistributionConfigWithTags": {
                    "description": "The distribution's configuration information. ",
                    "properties": {
                        "DistributionConfig": {
                            "description": "A distribution configuration.",
                            "properties": {
                                "Aliases": {
                                    "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                                    "properties": {
                                        "Items": {
                                            "description": "A complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Quantity": {
                                            "description": "The number of CNAME aliases, if any, that you want to associate with this distribution.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Quantity"
                                    ],
                                    "type": "object"
                                },
                                "CacheBehaviors": {
                                    "description": "A complex type that contains zero or more <code>CacheBehavior</code> elements. ",
                                    "properties": {
                                        "Items": {
                                            "description": "Optional: A complex type that contains cache behaviors for this distribution. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                            "items": {
                                                "description": "<p>A complex type that describes how CloudFront processes requests.</p> <p>You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.</p> <p>For the current limit on the number of cache behaviors that you can add to a distribution, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront\">Amazon CloudFront Limits</a> in the <i>AWS General Reference</i>.</p> <p>If you don't want to specify any cache behaviors, include only an empty <code>CacheBehaviors</code> element. Don't include an empty <code>CacheBehavior</code> element, or CloudFront returns a <code>MalformedXML</code> error.</p> <p>To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty <code>CacheBehaviors</code> element.</p> <p>To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.</p> <p>For more information about cache behaviors, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior\">Cache Behaviors</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                "properties": {
                                                    "AllowedMethods": {
                                                        "description": "<p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>",
                                                        "properties": {
                                                            "CachedMethods": {
                                                                "description": "<p>A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:</p> <ul> <li> <p>CloudFront caches responses to <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly. </p>",
                                                                "properties": {
                                                                    "Items": {
                                                                        "description": "A complex type that contains the HTTP methods that you want CloudFront to cache responses to.",
                                                                        "items": {
                                                                            "enum": [
                                                                                "GET",
                                                                                "HEAD",
                                                                                "POST",
                                                                                "PUT",
                                                                                "PATCH",
                                                                                "OPTIONS",
                                                                                "DELETE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Quantity": {
                                                                        "description": "The number of HTTP methods for which you want CloudFront to cache responses. Valid values are <code>2</code> (for caching responses to <code>GET</code> and <code>HEAD</code> requests) and <code>3</code> (for caching responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests).",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Quantity",
                                                                    "Items"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "Items": {
                                                                "description": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.",
                                                                "items": {
                                                                    "enum": [
                                                                        "GET",
                                                                        "HEAD",
                                                                        "POST",
                                                                        "PUT",
                                                                        "PATCH",
                                                                        "OPTIONS",
                                                                        "DELETE"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Quantity": {
                                                                "description": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for <code>GET</code> and <code>HEAD</code> requests), 3 (for <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests) and 7 (for <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests).",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Quantity",
                                                            "Items"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Compress": {
                                                        "description": "Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html\">Serving Compressed Files</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                                        "type": "boolean"
                                                    },
                                                    "DefaultTTL": {
                                                        "description": "The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                                        "type": "integer"
                                                    },
                                                    "FieldLevelEncryptionId": {
                                                        "description": "The value of <code>ID</code> for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for a cache behavior or for the default cache behavior in your distribution.",
                                                        "type": "string"
                                                    },
                                                    "ForwardedValues": {
                                                        "description": "A complex type that specifies how CloudFront handles query strings and cookies.",
                                                        "properties": {
                                                            "Cookies": {
                                                                "description": "A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html\">How CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                                                "properties": {
                                                                    "Forward": {
                                                                        "description": "<p>Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the <code>WhitelistedNames</code> complex type.</p> <p>Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the <code>Forward</code> element. </p>",
                                                                        "enum": [
                                                                            "none",
                                                                            "whitelist",
                                                                            "all"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "WhitelistedNames": {
                                                                        "description": "<p>Required if you specify <code>whitelist</code> for the value of <code>Forward:</code>. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.</p> <p>If you specify <code>all</code> or none for the value of <code>Forward</code>, omit <code>WhitelistedNames</code>. If you change the value of <code>Forward</code> from <code>whitelist</code> to all or none and you don't delete the <code>WhitelistedNames</code> element and its child elements, CloudFront deletes them automatically.</p> <p>For the current limit on the number of cookie names that you can whitelist for each cache behavior, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront\">Amazon CloudFront Limits</a> in the <i>AWS General Reference</i>.</p>",
                                                                        "properties": {
                                                                            "Items": {
                                                                                "description": "A complex type that contains one <code>Name</code> element for each cookie that you want CloudFront to forward to the origin for this cache behavior.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "Quantity": {
                                                                                "description": "The number of different cookies that you want CloudFront to forward to the origin for this cache behavior.",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Quantity"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Forward"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "Headers": {
                                                                "description": "A complex type that specifies the <code>Headers</code>, if any, that you want CloudFront to base caching on for this cache behavior. ",
                                                                "properties": {
                                                                    "Items": {
                                                                        "description": "A list that contains one <code>Name</code> element for each header that you want CloudFront to use for caching in this cache behavior. If <code>Quantity</code> is <code>0</code>, omit <code>Items</code>.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Quantity": {
                                                                        "description": "<p>The number of different headers that you want CloudFront to base caching on for this cache behavior. You can configure each cache behavior in a web distribution to do one of the following:</p> <ul> <li> <p> <b>Forward all headers to your origin</b>: Specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>.</p> <important> <p>CloudFront doesn't cache the objects that are associated with this cache behavior. Instead, CloudFront sends every request to the origin. </p> </important> </li> <li> <p> <b>Forward a whitelist of headers you specify</b>: Specify the number of headers that you want CloudFront to base caching on. Then specify the header names in <code>Name</code> elements. CloudFront caches your objects based on the values in the specified headers.</p> </li> <li> <p> <b>Forward only the default headers</b>: Specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. In this configuration, CloudFront doesn't cache based on the values in the request headers.</p> </li> </ul> <p>Regardless of which option you choose, CloudFront forwards headers to your origin based on whether the origin is an S3 bucket or a custom origin. See the following documentation:</p> <ul> <li> <p> <b>S3 bucket</b>: See <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers\">HTTP Request Headers That CloudFront Removes or Updates</a> </p> </li> <li> <p> <b>Custom origin</b>: See <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior\">HTTP Request Headers and CloudFront Behavior</a> </p> </li> </ul>",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Quantity"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "QueryString": {
                                                                "description": "<p>Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of <code>QueryString</code> and on the values that you specify for <code>QueryStringCacheKeys</code>, if any:</p> <p>If you specify true for <code>QueryString</code> and you don't specify any values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.</p> <p>If you specify true for <code>QueryString</code> and you specify one or more values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.</p> <p>If you specify false for <code>QueryString</code>, CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html\">Configuring CloudFront to Cache Based on Query String Parameters</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                                "type": "boolean"
                                                            },
                                                            "QueryStringCacheKeys": {
                                                                "description": "A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.",
                                                                "properties": {
                                                                    "Items": {
                                                                        "description": "(Optional) A list that contains the query string parameters that you want CloudFront to use as a basis for caching for this cache behavior. If <code>Quantity</code> is 0, you can omit <code>Items</code>. ",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Quantity": {
                                                                        "description": "The number of <code>whitelisted</code> query string parameters for this cache behavior.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Quantity"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "QueryString",
                                                            "Cookies"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "LambdaFunctionAssociations": {
                                                        "description": "A complex type that contains zero or more Lambda function associations for a cache behavior.",
                                                        "properties": {
                                                            "Items": {
                                                                "description": " <b>Optional</b>: A complex type that contains <code>LambdaFunctionAssociation</code> items for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                                                "items": {
                                                                    "description": "A complex type that contains a Lambda function association.",
                                                                    "properties": {
                                                                        "EventType": {
                                                                            "description": "<p>Specifies the event type that triggers a Lambda function invocation. You can specify the following values:</p> <ul> <li> <p> <code>viewer-request</code>: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache. </p> </li> <li> <p> <code>origin-request</code>: The function executes only when CloudFront forwards a request to your origin. When the requested object is in the edge cache, the function doesn't execute.</p> </li> <li> <p> <code>origin-response</code>: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.</p> </li> <li> <p> <code>viewer-response</code>: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.</p> <p>If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.</p> </li> </ul>",
                                                                            "enum": [
                                                                                "viewer-request",
                                                                                "viewer-response",
                                                                                "origin-request",
                                                                                "origin-response"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "IncludeBody": {
                                                                            "description": "A flag that allows a Lambda function to have read access to the body content. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html\">Accessing the Request Body by Choosing the Include Body Option</a> in the Amazon CloudFront Developer Guide.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "LambdaFunctionARN": {
                                                                            "description": "The ARN of the Lambda function. You must specify the ARN of a function version; you can't specify a Lambda alias or $LATEST.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "LambdaFunctionARN",
                                                                        "EventType"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Quantity": {
                                                                "description": "The number of Lambda function associations for this cache behavior.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Quantity"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "MaxTTL": {
                                                        "description": "The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                                        "type": "integer"
                                                    },
                                                    "MinTTL": {
                                                        "description": "<p>The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p> <p>You must specify <code>0</code> for <code>MinTTL</code> if you configure CloudFront to forward all headers to your origin (under <code>Headers</code>, if you specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>).</p>",
                                                        "type": "integer"
                                                    },
                                                    "PathPattern": {
                                                        "description": "<p>The pattern (for example, <code>images/*.jpg</code>) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.</p> <note> <p>You can optionally include a slash (<code>/</code>) at the beginning of the path pattern. For example, <code>/images/*.jpg</code>. CloudFront behavior is the same with or without the leading <code>/</code>.</p> </note> <p>The path pattern for the default cache behavior is <code>*</code> and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern\">Path Pattern</a> in the <i> Amazon CloudFront Developer Guide</i>.</p>",
                                                        "type": "string"
                                                    },
                                                    "SmoothStreaming": {
                                                        "description": "Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. If you specify <code>true</code> for <code>SmoothStreaming</code>, you can still distribute other content using this cache behavior if the content matches the value of <code>PathPattern</code>. ",
                                                        "type": "boolean"
                                                    },
                                                    "TargetOriginId": {
                                                        "description": "The value of <code>ID</code> for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior in your distribution.",
                                                        "type": "string"
                                                    },
                                                    "TrustedSigners": {
                                                        "description": "<p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\">Serving Private Content through CloudFront</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p>",
                                                        "properties": {
                                                            "Enabled": {
                                                                "description": "Specifies whether you want to require viewers to use signed URLs to access the files specified by <code>PathPattern</code> and <code>TargetOriginId</code>.",
                                                                "type": "boolean"
                                                            },
                                                            "Items": {
                                                                "description": " <b>Optional</b>: A complex type that contains trusted signers for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Quantity": {
                                                                "description": "The number of trusted signers for this cache behavior.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Enabled",
                                                            "Quantity"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "ViewerProtocolPolicy": {
                                                        "description": "<p>The protocol that viewers can use to access the files in the origin specified by <code>TargetOriginId</code> when a request matches the path pattern in <code>PathPattern</code>. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code>: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL. </p> </li> <li> <p> <code>https-only</code>: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden). </p> </li> </ul> <p>For more information about requiring the HTTPS protocol, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html\">Using an HTTPS Connection to Access Your Objects</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <note> <p>The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </note>",
                                                        "enum": [
                                                            "allow-all",
                                                            "https-only",
                                                            "redirect-to-https"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "PathPattern",
                                                    "TargetOriginId",
                                                    "ForwardedValues",
                                                    "TrustedSigners",
                                                    "ViewerProtocolPolicy",
                                                    "MinTTL"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Quantity": {
                                            "description": "The number of cache behaviors for this distribution. ",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Quantity"
                                    ],
                                    "type": "object"
                                },
                                "CallerReference": {
                                    "description": "<p>A unique value (for example, a date-time stamp) that ensures that the request can't be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>DistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>",
                                    "type": "string"
                                },
                                "Comment": {
                                    "description": "<p>Any comments you want to include about the distribution.</p> <p>If you don't want to specify a comment, include an empty <code>Comment</code> element.</p> <p>To delete an existing comment, update the distribution configuration and include an empty <code>Comment</code> element.</p> <p>To add or change a comment, update the distribution configuration and specify the new comment.</p>",
                                    "type": "string"
                                },
                                "CustomErrorResponses": {
                                    "description": "<p>A complex type that controls the following:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html\">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                    "properties": {
                                        "Items": {
                                            "description": "A complex type that contains a <code>CustomErrorResponse</code> element for each HTTP status code for which you want to specify a custom error page and/or a caching duration. ",
                                            "items": {
                                                "description": "<p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer. </p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html\">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                "properties": {
                                                    "ErrorCachingMinTTL": {
                                                        "description": "<p>The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in <code>ErrorCode</code>. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.</p> <p>If you don't want to specify a value, include an empty element, <code>&lt;ErrorCachingMinTTL&gt;</code>, in the XML document.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html\">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                        "type": "integer"
                                                    },
                                                    "ErrorCode": {
                                                        "description": "The HTTP status code for which you want to specify a custom error page and/or a caching duration.",
                                                        "type": "integer"
                                                    },
                                                    "ResponseCode": {
                                                        "description": "<p>The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:</p> <ul> <li> <p>Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute <code>200</code>, the response typically won't be intercepted.</p> </li> <li> <p>If you don't care about distinguishing among different client errors or server errors, you can specify <code>400</code> or <code>500</code> as the <code>ResponseCode</code> for all 4xx or 5xx errors.</p> </li> <li> <p>You might want to return a <code>200</code> status code (OK) and static website so your customers don't know that your website is down.</p> </li> </ul> <p>If you specify a value for <code>ResponseCode</code>, you must also specify a value for <code>ResponsePagePath</code>. If you don't want to specify a value, include an empty element, <code>&lt;ResponseCode&gt;</code>, in the XML document.</p>",
                                                        "type": "string"
                                                    },
                                                    "ResponsePagePath": {
                                                        "description": "<p>The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by <code>ErrorCode</code>, for example, <code>/4xx-errors/403-forbidden.html</code>. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:</p> <ul> <li> <p>The value of <code>PathPattern</code> matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named <code>/4xx-errors</code>. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, <code>/4xx-errors/*</code>. </p> </li> <li> <p>The value of <code>TargetOriginId</code> specifies the value of the <code>ID</code> element for the origin that contains your custom error pages.</p> </li> </ul> <p>If you specify a value for <code>ResponsePagePath</code>, you must also specify a value for <code>ResponseCode</code>. If you don't want to specify a value, include an empty element, <code>&lt;ResponsePagePath&gt;</code>, in the XML document.</p> <p>We recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can't get the files that you want to return to viewers because the origin server is unavailable.</p>",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "ErrorCode"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Quantity": {
                                            "description": "The number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Quantity"
                                    ],
                                    "type": "object"
                                },
                                "DefaultCacheBehavior": {
                                    "description": "A complex type that describes the default cache behavior if you don't specify a <code>CacheBehavior</code> element or if files don't match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.",
                                    "properties": {
                                        "AllowedMethods": {
                                            "description": "<p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>",
                                            "properties": {
                                                "CachedMethods": {
                                                    "description": "<p>A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:</p> <ul> <li> <p>CloudFront caches responses to <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly. </p>",
                                                    "properties": {
                                                        "Items": {
                                                            "description": "A complex type that contains the HTTP methods that you want CloudFront to cache responses to.",
                                                            "items": {
                                                                "enum": [
                                                                    "GET",
                                                                    "HEAD",
                                                                    "POST",
                                                                    "PUT",
                                                                    "PATCH",
                                                                    "OPTIONS",
                                                                    "DELETE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Quantity": {
                                                            "description": "The number of HTTP methods for which you want CloudFront to cache responses. Valid values are <code>2</code> (for caching responses to <code>GET</code> and <code>HEAD</code> requests) and <code>3</code> (for caching responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests).",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "Quantity",
                                                        "Items"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Items": {
                                                    "description": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.",
                                                    "items": {
                                                        "enum": [
                                                            "GET",
                                                            "HEAD",
                                                            "POST",
                                                            "PUT",
                                                            "PATCH",
                                                            "OPTIONS",
                                                            "DELETE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Quantity": {
                                                    "description": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for <code>GET</code> and <code>HEAD</code> requests), 3 (for <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests) and 7 (for <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests).",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "Quantity",
                                                "Items"
                                            ],
                                            "type": "object"
                                        },
                                        "Compress": {
                                            "description": "Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html\">Serving Compressed Files</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                            "type": "boolean"
                                        },
                                        "DefaultTTL": {
                                            "description": "The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                            "type": "integer"
                                        },
                                        "FieldLevelEncryptionId": {
                                            "description": "The value of <code>ID</code> for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for a cache behavior or for the default cache behavior in your distribution.",
                                            "type": "string"
                                        },
                                        "ForwardedValues": {
                                            "description": "A complex type that specifies how CloudFront handles query strings and cookies.",
                                            "properties": {
                                                "Cookies": {
                                                    "description": "A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html\">How CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.",
                                                    "properties": {
                                                        "Forward": {
                                                            "description": "<p>Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the <code>WhitelistedNames</code> complex type.</p> <p>Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the <code>Forward</code> element. </p>",
                                                            "enum": [
                                                                "none",
                                                                "whitelist",
                                                                "all"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "WhitelistedNames": {
                                                            "description": "<p>Required if you specify <code>whitelist</code> for the value of <code>Forward:</code>. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.</p> <p>If you specify <code>all</code> or none for the value of <code>Forward</code>, omit <code>WhitelistedNames</code>. If you change the value of <code>Forward</code> from <code>whitelist</code> to all or none and you don't delete the <code>WhitelistedNames</code> element and its child elements, CloudFront deletes them automatically.</p> <p>For the current limit on the number of cookie names that you can whitelist for each cache behavior, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront\">Amazon CloudFront Limits</a> in the <i>AWS General Reference</i>.</p>",
                                                            "properties": {
                                                                "Items": {
                                                                    "description": "A complex type that contains one <code>Name</code> element for each cookie that you want CloudFront to forward to the origin for this cache behavior.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "Quantity": {
                                                                    "description": "The number of different cookies that you want CloudFront to forward to the origin for this cache behavior.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "Quantity"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "Forward"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Headers": {
                                                    "description": "A complex type that specifies the <code>Headers</code>, if any, that you want CloudFront to base caching on for this cache behavior. ",
                                                    "properties": {
                                                        "Items": {
                                                            "description": "A list that contains one <code>Name</code> element for each header that you want CloudFront to use for caching in this cache behavior. If <code>Quantity</code> is <code>0</code>, omit <code>Items</code>.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Quantity": {
                                                            "description": "<p>The number of different headers that you want CloudFront to base caching on for this cache behavior. You can configure each cache behavior in a web distribution to do one of the following:</p> <ul> <li> <p> <b>Forward all headers to your origin</b>: Specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>.</p> <important> <p>CloudFront doesn't cache the objects that are associated with this cache behavior. Instead, CloudFront sends every request to the origin. </p> </important> </li> <li> <p> <b>Forward a whitelist of headers you specify</b>: Specify the number of headers that you want CloudFront to base caching on. Then specify the header names in <code>Name</code> elements. CloudFront caches your objects based on the values in the specified headers.</p> </li> <li> <p> <b>Forward only the default headers</b>: Specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. In this configuration, CloudFront doesn't cache based on the values in the request headers.</p> </li> </ul> <p>Regardless of which option you choose, CloudFront forwards headers to your origin based on whether the origin is an S3 bucket or a custom origin. See the following documentation:</p> <ul> <li> <p> <b>S3 bucket</b>: See <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers\">HTTP Request Headers That CloudFront Removes or Updates</a> </p> </li> <li> <p> <b>Custom origin</b>: See <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior\">HTTP Request Headers and CloudFront Behavior</a> </p> </li> </ul>",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "Quantity"
                                                    ],
                                                    "type": "object"
                                                },
                                                "QueryString": {
                                                    "description": "<p>Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of <code>QueryString</code> and on the values that you specify for <code>QueryStringCacheKeys</code>, if any:</p> <p>If you specify true for <code>QueryString</code> and you don't specify any values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.</p> <p>If you specify true for <code>QueryString</code> and you specify one or more values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.</p> <p>If you specify false for <code>QueryString</code>, CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html\">Configuring CloudFront to Cache Based on Query String Parameters</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "QueryStringCacheKeys": {
                                                    "description": "A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.",
                                                    "properties": {
                                                        "Items": {
                                                            "description": "(Optional) A list that contains the query string parameters that you want CloudFront to use as a basis for caching for this cache behavior. If <code>Quantity</code> is 0, you can omit <code>Items</code>. ",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Quantity": {
                                                            "description": "The number of <code>whitelisted</code> query string parameters for this cache behavior.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "Quantity"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "QueryString",
                                                "Cookies"
                                            ],
                                            "type": "object"
                                        },
                                        "LambdaFunctionAssociations": {
                                            "description": "A complex type that contains zero or more Lambda function associations for a cache behavior.",
                                            "properties": {
                                                "Items": {
                                                    "description": " <b>Optional</b>: A complex type that contains <code>LambdaFunctionAssociation</code> items for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                                    "items": {
                                                        "description": "A complex type that contains a Lambda function association.",
                                                        "properties": {
                                                            "EventType": {
                                                                "description": "<p>Specifies the event type that triggers a Lambda function invocation. You can specify the following values:</p> <ul> <li> <p> <code>viewer-request</code>: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache. </p> </li> <li> <p> <code>origin-request</code>: The function executes only when CloudFront forwards a request to your origin. When the requested object is in the edge cache, the function doesn't execute.</p> </li> <li> <p> <code>origin-response</code>: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.</p> </li> <li> <p> <code>viewer-response</code>: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.</p> <p>If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.</p> </li> </ul>",
                                                                "enum": [
                                                                    "viewer-request",
                                                                    "viewer-response",
                                                                    "origin-request",
                                                                    "origin-response"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "IncludeBody": {
                                                                "description": "A flag that allows a Lambda function to have read access to the body content. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html\">Accessing the Request Body by Choosing the Include Body Option</a> in the Amazon CloudFront Developer Guide.",
                                                                "type": "boolean"
                                                            },
                                                            "LambdaFunctionARN": {
                                                                "description": "The ARN of the Lambda function. You must specify the ARN of a function version; you can't specify a Lambda alias or $LATEST.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "LambdaFunctionARN",
                                                            "EventType"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Quantity": {
                                                    "description": "The number of Lambda function associations for this cache behavior.",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "Quantity"
                                            ],
                                            "type": "object"
                                        },
                                        "MaxTTL": {
                                            "type": "integer"
                                        },
                                        "MinTTL": {
                                            "description": "<p>The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p> <p>You must specify <code>0</code> for <code>MinTTL</code> if you configure CloudFront to forward all headers to your origin (under <code>Headers</code>, if you specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>).</p>",
                                            "type": "integer"
                                        },
                                        "SmoothStreaming": {
                                            "description": "Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. If you specify <code>true</code> for <code>SmoothStreaming</code>, you can still distribute other content using this cache behavior if the content matches the value of <code>PathPattern</code>. ",
                                            "type": "boolean"
                                        },
                                        "TargetOriginId": {
                                            "description": "The value of <code>ID</code> for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior in your distribution.",
                                            "type": "string"
                                        },
                                        "TrustedSigners": {
                                            "description": "<p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\">Serving Private Content through CloudFront</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p>",
                                            "properties": {
                                                "Enabled": {
                                                    "description": "Specifies whether you want to require viewers to use signed URLs to access the files specified by <code>PathPattern</code> and <code>TargetOriginId</code>.",
                                                    "type": "boolean"
                                                },
                                                "Items": {
                                                    "description": " <b>Optional</b>: A complex type that contains trusted signers for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Quantity": {
                                                    "description": "The number of trusted signers for this cache behavior.",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "Enabled",
                                                "Quantity"
                                            ],
                                            "type": "object"
                                        },
                                        "ViewerProtocolPolicy": {
                                            "description": "<p>The protocol that viewers can use to access the files in the origin specified by <code>TargetOriginId</code> when a request matches the path pattern in <code>PathPattern</code>. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code>: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.</p> </li> <li> <p> <code>https-only</code>: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).</p> </li> </ul> <p>For more information about requiring the HTTPS protocol, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html\">Using an HTTPS Connection to Access Your Objects</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <note> <p>The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html\">Specifying How Long Objects and Errors Stay in a CloudFront Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </note>",
                                            "enum": [
                                                "allow-all",
                                                "https-only",
                                                "redirect-to-https"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "TargetOriginId",
                                        "ForwardedValues",
                                        "TrustedSigners",
                                        "ViewerProtocolPolicy",
                                        "MinTTL"
                                    ],
                                    "type": "object"
                                },
                                "DefaultRootObject": {
                                    "description": "<p>The object that you want CloudFront to request from your origin (for example, <code>index.html</code>) when a viewer requests the root URL for your distribution (<code>http://www.example.com</code>) instead of an object in your distribution (<code>http://www.example.com/product-description.html</code>). Specifying a default root object avoids exposing the contents of your distribution.</p> <p>Specify only the object name, for example, <code>index.html</code>. Don't add a <code>/</code> before the object name.</p> <p>If you don't want to specify a default root object when you create a distribution, include an empty <code>DefaultRootObject</code> element.</p> <p>To delete the default root object from an existing distribution, update the distribution configuration and include an empty <code>DefaultRootObject</code> element.</p> <p>To replace the default root object, update the distribution configuration and specify the new object.</p> <p>For more information about the default root object, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html\">Creating a Default Root Object</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                    "type": "string"
                                },
                                "Enabled": {
                                    "description": "From this field, you can enable or disable the selected distribution.",
                                    "type": "boolean"
                                },
                                "HttpVersion": {
                                    "description": "<p>(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don't support HTTP/2 automatically use an earlier HTTP version.</p> <p>For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).</p> <p>In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for \"http/2 optimization.\" </p>",
                                    "enum": [
                                        "http1.1",
                                        "http2"
                                    ],
                                    "type": "string"
                                },
                                "IsIPV6Enabled": {
                                    "description": "<p>If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify <code>true</code>. If you specify <code>false</code>, CloudFront responds to IPv6 DNS requests with the DNS response code <code>NOERROR</code> and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. </p> <p>In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the <code>IpAddress</code> parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html\">Creating a Signed URL Using a Custom Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you're using an Amazon Route 53 alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:</p> <ul> <li> <p>You enable IPv6 for the distribution</p> </li> <li> <p>You're using alternate domain names in the URLs for your objects</p> </li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html\">Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>If you created a CNAME resource record set, either with Amazon Route 53 or with another DNS service, you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.</p>",
                                    "type": "boolean"
                                },
                                "Logging": {
                                    "description": "<p>A complex type that controls whether access logs are written for the distribution.</p> <p>For more information about logging, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html\">Access Logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                    "properties": {
                                        "Bucket": {
                                            "description": "The Amazon S3 bucket to store the access logs in, for example, <code>myawslogbucket.s3.amazonaws.com</code>.",
                                            "type": "string"
                                        },
                                        "Enabled": {
                                            "description": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don't want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify <code>false</code> for <code>Enabled</code>, and specify empty <code>Bucket</code> and <code>Prefix</code> elements. If you specify <code>false</code> for <code>Enabled</code> but you specify values for <code>Bucket</code>, <code>prefix</code>, and <code>IncludeCookies</code>, the values are automatically deleted.",
                                            "type": "boolean"
                                        },
                                        "IncludeCookies": {
                                            "description": "Specifies whether you want CloudFront to include cookies in access logs, specify <code>true</code> for <code>IncludeCookies</code>. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify <code>false</code> for <code>IncludeCookies</code>.",
                                            "type": "boolean"
                                        },
                                        "Prefix": {
                                            "description": "An optional string that you want CloudFront to prefix to the access log <code>filenames</code> for this distribution, for example, <code>myprefix/</code>. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty <code>Prefix</code> element in the <code>Logging</code> element.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Enabled",
                                        "IncludeCookies",
                                        "Bucket",
                                        "Prefix"
                                    ],
                                    "type": "object"
                                },
                                "OriginGroups": {
                                    "description": " A complex type that contains information about origin groups for this distribution.",
                                    "properties": {
                                        "Items": {
                                            "description": "The items (origin groups) in a distribution.",
                                            "items": {
                                                "description": "An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.",
                                                "properties": {
                                                    "FailoverCriteria": {
                                                        "description": "A complex type that contains information about the failover criteria for an origin group.",
                                                        "properties": {
                                                            "StatusCodes": {
                                                                "description": "The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.",
                                                                "properties": {
                                                                    "Items": {
                                                                        "description": "The items (status codes) for an origin group.",
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "Quantity": {
                                                                        "description": "The number of status codes.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Quantity",
                                                                    "Items"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "StatusCodes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Id": {
                                                        "description": "The origin group's ID.",
                                                        "type": "string"
                                                    },
                                                    "Members": {
                                                        "description": "A complex type that contains information about the origins in an origin group.",
                                                        "properties": {
                                                            "Items": {
                                                                "description": "Items (origins) in an origin group.",
                                                                "items": {
                                                                    "description": "An origin in an origin group.",
                                                                    "properties": {
                                                                        "OriginId": {
                                                                            "description": "The ID for an origin in an origin group.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "OriginId"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 2,
                                                                "minItems": 2,
                                                                "type": "array"
                                                            },
                                                            "Quantity": {
                                                                "description": "The number of origins in an origin group.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Quantity",
                                                            "Items"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "Id",
                                                    "FailoverCriteria",
                                                    "Members"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Quantity": {
                                            "description": "The number of origin groups.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Quantity"
                                    ],
                                    "type": "object"
                                },
                                "Origins": {
                                    "description": "A complex type that contains information about origins for this distribution. ",
                                    "properties": {
                                        "Items": {
                                            "description": "A complex type that contains origins or origin groups for this distribution.",
                                            "items": {
                                                "description": "<p>A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon MediaStore, or other server from which CloudFront gets your files. This can also be an origin group, if you've created an origin group. You must specify at least one origin or origin group.</p> <p>For the current limit on the number of origins or origin groups that you can specify for a distribution, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront\">Amazon CloudFront Limits</a> in the <i>AWS General Reference</i>.</p>",
                                                "properties": {
                                                    "CustomHeaders": {
                                                        "description": "A complex type that contains names and values for the custom headers that you want.",
                                                        "properties": {
                                                            "Items": {
                                                                "description": " <b>Optional</b>: A list that contains one <code>OriginCustomHeader</code> element for each custom header that you want CloudFront to forward to the origin. If Quantity is <code>0</code>, omit <code>Items</code>.",
                                                                "items": {
                                                                    "description": "A complex type that contains <code>HeaderName</code> and <code>HeaderValue</code> elements, if any, for this distribution. ",
                                                                    "properties": {
                                                                        "HeaderName": {
                                                                            "description": "The name of a header that you want CloudFront to forward to your origin. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html\">Forwarding Custom Headers to Your Origin (Web Distributions Only)</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.",
                                                                            "type": "string"
                                                                        },
                                                                        "HeaderValue": {
                                                                            "description": "The value for the header that you specified in the <code>HeaderName</code> field.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "HeaderName",
                                                                        "HeaderValue"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Quantity": {
                                                                "description": "The number of custom headers, if any, for this distribution.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Quantity"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "CustomOriginConfig": {
                                                        "description": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the <code>S3OriginConfig</code> element instead.",
                                                        "properties": {
                                                            "HTTPPort": {
                                                                "description": "The HTTP port the custom origin listens on.",
                                                                "type": "integer"
                                                            },
                                                            "HTTPSPort": {
                                                                "description": "The HTTPS port the custom origin listens on.",
                                                                "type": "integer"
                                                            },
                                                            "OriginKeepaliveTimeout": {
                                                                "description": "<p>You can create a custom keep-alive timeout. All timeout units are in seconds. The default keep-alive timeout is 5 seconds, but you can configure custom timeout lengths using the CloudFront API. The minimum timeout length is 1 second; the maximum is 60 seconds.</p> <p>If you need to increase the maximum time limit, contact the <a href=\"https://console.aws.amazon.com/support/home#/\">AWS Support Center</a>.</p>",
                                                                "type": "integer"
                                                            },
                                                            "OriginProtocolPolicy": {
                                                                "description": "The origin protocol policy to apply to your origin.",
                                                                "enum": [
                                                                    "http-only",
                                                                    "match-viewer",
                                                                    "https-only"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "OriginReadTimeout": {
                                                                "description": "<p>You can create a custom origin read timeout. All timeout units are in seconds. The default origin read timeout is 30 seconds, but you can configure custom timeout lengths using the CloudFront API. The minimum timeout length is 4 seconds; the maximum is 60 seconds.</p> <p>If you need to increase the maximum time limit, contact the <a href=\"https://console.aws.amazon.com/support/home#/\">AWS Support Center</a>.</p>",
                                                                "type": "integer"
                                                            },
                                                            "OriginSslProtocols": {
                                                                "description": "The SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS.",
                                                                "properties": {
                                                                    "Items": {
                                                                        "description": "A list that contains allowed SSL/TLS protocols for this distribution.",
                                                                        "items": {
                                                                            "enum": [
                                                                                "SSLv3",
                                                                                "TLSv1",
                                                                                "TLSv1.1",
                                                                                "TLSv1.2"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Quantity": {
                                                                        "description": "The number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin. ",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Quantity",
                                                                    "Items"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "HTTPPort",
                                                            "HTTPSPort",
                                                            "OriginProtocolPolicy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "DomainName": {
                                                        "description": "<p> <b>Amazon S3 origins</b>: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, <code>myawsbucket.s3.amazonaws.com</code>. If you set up your bucket to be configured as a website endpoint, enter the Amazon S3 static website hosting endpoint for the bucket.</p> <p>For more information about specifying this value for different types of origins, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName\">Origin Domain Name</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>Constraints for Amazon S3 origins: </p> <ul> <li> <p>If you configured Amazon S3 Transfer Acceleration for your bucket, don't specify the <code>s3-accelerate</code> endpoint for <code>DomainName</code>.</p> </li> <li> <p>The bucket name must be between 3 and 63 characters long (inclusive).</p> </li> <li> <p>The bucket name must contain only lowercase characters, numbers, periods, underscores, and dashes.</p> </li> <li> <p>The bucket name must not contain adjacent periods.</p> </li> </ul> <p> <b>Custom Origins</b>: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, <code>www.example.com</code>. </p> <p>Constraints for custom origins:</p> <ul> <li> <p> <code>DomainName</code> must be a valid DNS name that contains only a-z, A-Z, 0-9, dot (.), hyphen (-), or underscore (_) characters.</p> </li> <li> <p>The name cannot exceed 128 characters.</p> </li> </ul>",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "<p>A unique identifier for the origin or origin group. The value of <code>Id</code> must be unique within the distribution.</p> <p>When you specify the value of <code>TargetOriginId</code> for the default cache behavior or for another cache behavior, you indicate the origin to which you want the cache behavior to route requests by specifying the value of the <code>Id</code> element for that origin. When a request matches the path pattern for that cache behavior, CloudFront routes the request to the specified origin. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior\">Cache Behavior Settings</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                        "type": "string"
                                                    },
                                                    "OriginPath": {
                                                        "description": "<p>An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin. When you include the <code>OriginPath</code> element, specify the directory name, beginning with a <code>/</code>. CloudFront appends the directory name to the value of <code>DomainName</code>, for example, <code>example.com/production</code>. Do not include a <code>/</code> at the end of the directory name.</p> <p>For example, suppose you've specified the following values for your distribution:</p> <ul> <li> <p> <code>DomainName</code>: An Amazon S3 bucket named <code>myawsbucket</code>.</p> </li> <li> <p> <code>OriginPath</code>: <code>/production</code> </p> </li> <li> <p> <code>CNAME</code>: <code>example.com</code> </p> </li> </ul> <p>When a user enters <code>example.com/index.html</code> in a browser, CloudFront sends a request to Amazon S3 for <code>myawsbucket/production/index.html</code>.</p> <p>When a user enters <code>example.com/acme/index.html</code> in a browser, CloudFront sends a request to Amazon S3 for <code>myawsbucket/production/acme/index.html</code>.</p>",
                                                        "type": "string"
                                                    },
                                                    "S3OriginConfig": {
                                                        "description": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the <code>CustomOriginConfig</code> element instead.",
                                                        "properties": {
                                                            "OriginAccessIdentity": {
                                                                "description": "<p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p> <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p> <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p> <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p> <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p> <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p> <p>For more information about the origin access identity, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "OriginAccessIdentity"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "Id",
                                                    "DomainName"
                                                ],
                                                "type": "object"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Quantity": {
                                            "description": "The number of origins or origin groups for this distribution.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Quantity",
                                        "Items"
                                    ],
                                    "type": "object"
                                },
                                "PriceClass": {
                                    "description": "<p>The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify <code>PriceClass_All</code>, CloudFront responds to requests for your objects from all CloudFront edge locations.</p> <p>If you specify a price class other than <code>PriceClass_All</code>, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.</p> <p>For more information about price classes, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html\">Choosing the Price Class for a CloudFront Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see <a href=\"https://aws.amazon.com/cloudfront/pricing/\">Amazon CloudFront Pricing</a>. For price class information, scroll down to see the table at the bottom of the page.</p>",
                                    "enum": [
                                        "PriceClass_100",
                                        "PriceClass_200",
                                        "PriceClass_All"
                                    ],
                                    "type": "string"
                                },
                                "Restrictions": {
                                    "description": "<p/>",
                                    "properties": {
                                        "GeoRestriction": {
                                            "description": "A complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using <code>MaxMind</code> GeoIP databases. ",
                                            "properties": {
                                                "Items": {
                                                    "description": "<p> A complex type that contains a <code>Location</code> element for each country in which you want CloudFront either to distribute your content (<code>whitelist</code>) or not distribute your content (<code>blacklist</code>).</p> <p>The <code>Location</code> element is a two-letter, uppercase country code for a country that you want to include in your <code>blacklist</code> or <code>whitelist</code>. Include one <code>Location</code> element for each country.</p> <p>CloudFront and <code>MaxMind</code> both use <code>ISO 3166</code> country codes. For the current list of countries and the corresponding codes, see <code>ISO 3166-1-alpha-2</code> code on the <i>International Organization for Standardization</i> website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Quantity": {
                                                    "description": "When geo restriction is <code>enabled</code>, this is the number of countries in your <code>whitelist</code> or <code>blacklist</code>. Otherwise, when it is not enabled, <code>Quantity</code> is <code>0</code>, and you can omit <code>Items</code>.",
                                                    "type": "integer"
                                                },
                                                "RestrictionType": {
                                                    "description": "<p>The method that you want to use to restrict distribution of your content by country:</p> <ul> <li> <p> <code>none</code>: No geo restriction is enabled, meaning access to content is not restricted by client geo location.</p> </li> <li> <p> <code>blacklist</code>: The <code>Location</code> elements specify the countries in which you don't want CloudFront to distribute your content.</p> </li> <li> <p> <code>whitelist</code>: The <code>Location</code> elements specify the countries in which you want CloudFront to distribute your content.</p> </li> </ul>",
                                                    "enum": [
                                                        "blacklist",
                                                        "whitelist",
                                                        "none"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "RestrictionType",
                                                "Quantity"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "GeoRestriction"
                                    ],
                                    "type": "object"
                                },
                                "ViewerCertificate": {
                                    "description": "<p/>",
                                    "properties": {
                                        "ACMCertificateArn": {
                                            "description": "For information about how and when to use <code>ACMCertificateArn</code>, see <a>ViewerCertificate</a>.",
                                            "type": "string"
                                        },
                                        "Certificate": {
                                            "description": "<p>This field has been deprecated. Use one of the following fields instead:</p> <ul> <li> <p> <a>ViewerCertificate$ACMCertificateArn</a> </p> </li> <li> <p> <a>ViewerCertificate$IAMCertificateId</a> </p> </li> <li> <p> <a>ViewerCertificate$CloudFrontDefaultCertificate</a> </p> </li> </ul>",
                                            "type": "string"
                                        },
                                        "CertificateSource": {
                                            "description": "<p>This field has been deprecated. Use one of the following fields instead:</p> <ul> <li> <p> <a>ViewerCertificate$ACMCertificateArn</a> </p> </li> <li> <p> <a>ViewerCertificate$IAMCertificateId</a> </p> </li> <li> <p> <a>ViewerCertificate$CloudFrontDefaultCertificate</a> </p> </li> </ul>",
                                            "enum": [
                                                "cloudfront",
                                                "iam",
                                                "acm"
                                            ],
                                            "type": "string"
                                        },
                                        "CloudFrontDefaultCertificate": {
                                            "description": "For information about how and when to use <code>CloudFrontDefaultCertificate</code>, see <a>ViewerCertificate</a>.",
                                            "type": "boolean"
                                        },
                                        "IAMCertificateId": {
                                            "description": "For information about how and when to use <code>IAMCertificateId</code>, see <a>ViewerCertificate</a>.",
                                            "type": "string"
                                        },
                                        "MinimumProtocolVersion": {
                                            "description": "<p>Specify the security policy that you want CloudFront to use for HTTPS connections. A security policy determines two settings:</p> <ul> <li> <p>The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers</p> </li> <li> <p>The cipher that CloudFront uses to encrypt the content that it returns to viewers</p> </li> </ul> <note> <p>On the CloudFront console, this setting is called <b>Security policy</b>.</p> </note> <p>We recommend that you specify <code>TLSv1.1_2016</code> unless your users are using browsers or devices that do not support TLSv1.1 or later.</p> <p>When both of the following are true, you must specify <code>TLSv1</code> or later for the security policy: </p> <ul> <li> <p>You're using a custom certificate: you specified a value for <code>ACMCertificateArn</code> or for <code>IAMCertificateId</code> </p> </li> <li> <p>You're using SNI: you specified <code>sni-only</code> for <code>SSLSupportMethod</code> </p> </li> </ul> <p>If you specify <code>true</code> for <code>CloudFrontDefaultCertificate</code>, CloudFront automatically sets the security policy to <code>TLSv1</code> regardless of the value that you specify for <code>MinimumProtocolVersion</code>.</p> <p>For information about the relationship between the security policy that you choose and the protocols and ciphers that CloudFront uses to communicate with viewers, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers\"> Supported SSL/TLS Protocols and Ciphers for Communication Between Viewers and CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                            "enum": [
                                                "SSLv3",
                                                "TLSv1",
                                                "TLSv1_2016",
                                                "TLSv1.1_2016",
                                                "TLSv1.2_2018"
                                            ],
                                            "type": "string"
                                        },
                                        "SSLSupportMethod": {
                                            "description": "<p>If you specify a value for <a>ViewerCertificate$ACMCertificateArn</a> or for <a>ViewerCertificate$IAMCertificateId</a>, you must also specify how you want CloudFront to serve HTTPS requests: using a method that works for all clients or one that works for most clients:</p> <ul> <li> <p> <code>vip</code>: CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you will incur additional monthly charges.</p> </li> <li> <p> <code>sni-only</code>: CloudFront can respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. If some of your users' browsers don't support SNI, we recommend that you do one of the following:</p> <ul> <li> <p>Use the <code>vip</code> option (dedicated IP addresses) instead of <code>sni-only</code>.</p> </li> <li> <p>Use the CloudFront SSL/TLS certificate instead of a custom certificate. This requires that you use the CloudFront domain name of your distribution in the URLs for your objects, for example, <code>https://d111111abcdef8.cloudfront.net/logo.png</code>.</p> </li> <li> <p>If you can control which browser your users use, upgrade the browser to one that supports SNI.</p> </li> <li> <p>Use HTTP instead of HTTPS.</p> </li> </ul> </li> </ul> <p>Don't specify a value for <code>SSLSupportMethod</code> if you specified <code>&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;</code>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS.html\">Using Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>",
                                            "enum": [
                                                "sni-only",
                                                "vip"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "WebACLId": {
                                    "description": "<p>A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution.</p> <p>AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about AWS WAF, see the <a href=\"http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html\">AWS WAF Developer Guide</a>. </p>",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "CallerReference",
                                "Origins",
                                "DefaultCacheBehavior",
                                "Comment",
                                "Enabled"
                            ],
                            "type": "object"
                        },
                        "Tags": {
                            "description": "A complex type that contains zero or more <code>Tag</code> elements.",
                            "properties": {
                                "Items": {
                                    "description": " A complex type that contains <code>Tag</code> elements.",
                                    "items": {
                                        "description": " A complex type that contains <code>Tag</code> key and <code>Tag</code> value.",
                                        "properties": {
                                            "Key": {
                                                "description": "<p> A string that contains <code>Tag</code> key.</p> <p>The string length should be between 1 and 128 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "<p> A string that contains an optional <code>Tag</code> value.</p> <p>The string length should be between 0 and 256 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Key"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "required": [
                        "DistributionConfig",
                        "Tags"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "DistributionConfigWithTags"
            ],
            "type": "object",
            "xml": {
                "namespace": "http://cloudfront.amazonaws.com/doc/2018-11-05/"
            }
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}